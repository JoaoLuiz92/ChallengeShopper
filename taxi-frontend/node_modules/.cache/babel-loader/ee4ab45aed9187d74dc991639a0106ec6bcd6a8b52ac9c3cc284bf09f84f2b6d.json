{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Windows 11\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\taxiapp\\\\taxi-frontend\\\\src\\\\components\\\\Map.tsx\";\nimport React from 'react';\nimport { MapContainer, TileLayer, Marker, Polyline } from 'react-leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = ({\n  route\n}) => {\n  if (!route.start || !route.end || !route.path || route.path.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Erro: Dados da rota est\\xE3o incompletos.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: route.start,\n    zoom: 13,\n    style: {\n      height: '400px',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      position: route.start\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      position: route.end\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n      positions: route.path\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","MapContainer","TileLayer","Marker","Polyline","jsxDEV","_jsxDEV","Map","route","start","end","path","length","children","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","style","height","width","url","position","positions","_c","$RefreshReg$"],"sources":["C:/Users/Windows 11/OneDrive/Área de Trabalho/taxiapp/taxi-frontend/src/components/Map.tsx"],"sourcesContent":["import React from 'react';\r\nimport { MapContainer, TileLayer, Marker, Polyline } from 'react-leaflet';\r\nimport { LatLngExpression } from 'leaflet';\r\nimport {RouteData } from '../types'\r\n\r\n\r\ninterface MapProps {\r\n  route: RouteData;\r\n}\r\n\r\nconst Map: React.FC<MapProps> = ({ route }) => {\r\n  if (!route.start || !route.end || !route.path || route.path.length === 0) {\r\n    return <p>Erro: Dados da rota estão incompletos.</p>;\r\n  }\r\n\r\n  return (\r\n    <MapContainer center={route.start} zoom={13} style={{ height: '400px', width: '100%' }}>\r\n      <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n      <Marker position={route.start} />\r\n      <Marker position={route.end} />\r\n      <Polyline positions={route.path} />\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS1E,MAAMC,GAAuB,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAC7C,IAAI,CAACA,KAAK,CAACC,KAAK,IAAI,CAACD,KAAK,CAACE,GAAG,IAAI,CAACF,KAAK,CAACG,IAAI,IAAIH,KAAK,CAACG,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;IACxE,oBAAON,OAAA;MAAAO,QAAA,EAAG;IAAsC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACtD;EAEA,oBACEX,OAAA,CAACL,YAAY;IAACiB,MAAM,EAAEV,KAAK,CAACC,KAAM;IAACU,IAAI,EAAE,EAAG;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAT,QAAA,gBACrFP,OAAA,CAACJ,SAAS;MAACqB,GAAG,EAAC;IAAoD;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtEX,OAAA,CAACH,MAAM;MAACqB,QAAQ,EAAEhB,KAAK,CAACC;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjCX,OAAA,CAACH,MAAM;MAACqB,QAAQ,EAAEhB,KAAK,CAACE;IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/BX,OAAA,CAACF,QAAQ;MAACqB,SAAS,EAAEjB,KAAK,CAACG;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEnB,CAAC;AAACS,EAAA,GAbInB,GAAuB;AAe7B,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}