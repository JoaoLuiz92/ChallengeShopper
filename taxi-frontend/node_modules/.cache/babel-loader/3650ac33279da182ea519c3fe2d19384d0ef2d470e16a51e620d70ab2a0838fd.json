{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Windows 11\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\taxiapp\\\\taxi-frontend\\\\src\\\\pages\\\\RequestRide.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RequestRide = () => {\n  _s();\n  const [customerId, setCustomerId] = useState('');\n  const [origin, setOrigin] = useState('');\n  const [destination, setDestination] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await axios.post('http://localhost:3000/ride/estimate', {\n        customer_id: customerId,\n        origin,\n        destination\n      });\n      console.log('Resposta: ', response.data);\n\n      // Navega para a próxima tela de opções de viagem\n      navigate('/ride-options', {\n        state: {\n          routeData: response.data\n        }\n      });\n    } catch (err) {\n      setError('Erro ao calcular a viagem. Tente novamente.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Solicita\\xE7\\xE3o de Viagem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"ID do Cliente\",\n      value: customerId,\n      onChange: e => setCustomerId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Endere\\xE7o de Origem\",\n      value: origin,\n      onChange: e => setOrigin(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Endere\\xE7o de Destino\",\n      value: destination,\n      onChange: e => setDestination(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      disabled: loading,\n      children: loading ? 'Carregando...' : 'Estimar Viagem'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(RequestRide, \"rPFYZGsdVok8Ia1vXpwZmXbdm1I=\", false, function () {\n  return [useNavigate];\n});\n_c = RequestRide;\nexport default RequestRide;\nvar _c;\n$RefreshReg$(_c, \"RequestRide\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","RequestRide","_s","customerId","setCustomerId","origin","setOrigin","destination","setDestination","error","setError","loading","setLoading","navigate","handleSubmit","response","post","customer_id","console","log","data","state","routeData","err","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Windows 11/OneDrive/Área de Trabalho/taxiapp/taxi-frontend/src/pages/RequestRide.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst RequestRide: React.FC = () => {\r\n  const [customerId, setCustomerId] = useState('');\r\n  const [origin, setOrigin] = useState('');\r\n  const [destination, setDestination] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      const response = await axios.post('http://localhost:3000/ride/estimate', {\r\n        customer_id: customerId,\r\n        origin,\r\n        destination,\r\n      });\r\n      console.log('Resposta: ', response.data);\r\n\r\n      // Navega para a próxima tela de opções de viagem\r\n      navigate('/ride-options', { state: { routeData: response.data } });\r\n    } catch (err) {\r\n      setError('Erro ao calcular a viagem. Tente novamente.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Solicitação de Viagem</h1>\r\n      <input \r\n        type=\"text\" \r\n        placeholder=\"ID do Cliente\" \r\n        value={customerId} \r\n        onChange={(e) => setCustomerId(e.target.value)} \r\n      />\r\n      <input \r\n        type=\"text\" \r\n        placeholder=\"Endereço de Origem\" \r\n        value={origin} \r\n        onChange={(e) => setOrigin(e.target.value)} \r\n      />\r\n      <input \r\n        type=\"text\" \r\n        placeholder=\"Endereço de Destino\" \r\n        value={destination} \r\n        onChange={(e) => setDestination(e.target.value)} \r\n      />\r\n      <button onClick={handleSubmit} disabled={loading}>\r\n        {loading ? 'Carregando...' : 'Estimar Viagem'}\r\n      </button>\r\n      {error && <p>{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RequestRide;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}